---
import Glitch from "../components/glitch.astro";
import CopyIcon from "../components/copyIcon.astro";
import GithubIcon from "../components/githubIcon.astro";
import FireshipLogo from "../components/fireshipLogo.astro";

import { clsx } from "clsx";
import { getEntryBySlug } from "astro:content";

const focusStyles = `
  !outline-none focus-visible:ring-1 ring-offset-8 ring-gray-A10 ring-offset-gray-0
`;

const pyramid = await getEntryBySlug("codesnippets", "pyramid-of-hell");
const heaven = await getEntryBySlug("codesnippets", "heaven-one-liners");
const terror = await getEntryBySlug("codesnippets", "tower-of-terror");
const awesome = await getEntryBySlug("codesnippets", "awesome");

const { Content: Pyramid } = await pyramid.render();
const { Content: Heaven } = await heaven.render();
const { Content: Terror } = await terror.render();
const { Content: Awesome } = await awesome.render();
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Try - a</title>
  </head>
  <body
    class="min-h-screen bg-black text-gray-A11 selection:bg-gray-A11 selection:text-gray-2"
  >
    <div
      class="h-full flex flex-col items-center justify-between gap-8 p-6 sm:pt-24"
    >
      <main
        class="max-w-3xl mx-auto flex flex-col justify-center items-center relative space-y-4"
      >
        <div class="max-w-2xl text-left space-y-2">
          <div class="flex justify-between items-end">
            <div>
              <Glitch text="v1.1" />
              <h1
                class="before:bg-shine relative !text-gray-A12 before:absolute before:left-0 before:top-0 before:w-full before:animate-[shine_2s_ease-in-out] before:bg-[length:200%] before:bg-clip-text before:text-transparent before:content-['The_next_generation_of_writing_emails'] before:pointer-events-none text-[38px] leading-[46px] md:text-[70px] md:leading-[85px] tracking-[-1.024px;] text-slate-12 font-bold"
              >
                try()
              </h1>
            </div>

            <div>
              <div class="flex flex-col gap-2 items-end">
                <button
                  id="copy"
                  class={clsx(
                    "cursor-copy bg-gradient-to-t from-gray-A3 to-gray-A5 p-2 rounded flex justify-between items-center gap-2 select-text hover:bg-gray-A2 transition-all hover:text-gray-12 hover:shadow-lg shadow-white active:scale-[98%] focus:text-gray-12",
                    focusStyles
                  )}
                >
                  <span class="select-none text-gray-A7">$</span>
                  <pre>npm install @bdsqqq/try</pre>
                  <div class="rounded-sm transform translate-y-px">
                    <CopyIcon />
                  </div>
                </button>
                <a
                  class={clsx(
                    "flex items-center gap-2 hover:text-gray-12 transition-colors focus:text-gray-12 rounded",
                    focusStyles
                  )}
                  href="https://github.com/bdsqqq/try"
                >
                  <div class="transform translate-y-px">
                    <GithubIcon />
                  </div> bdsqqq/try
                </a>
              </div>
            </div>
          </div>
          <div>
            <span>
              Don't let the Try Catch Tower of Terror destroy your beautiful one
              liners.
            </span>
          </div>
        </div>

        <div class="w-full mx-auto space-y-4">
          <div class="max-w-lg mx-auto">
            <p>
              <span class="story"
                >Long ago, our asyncronous code built the pyramids of hell.</span
              >
              <span class="story">
                The heavenly one-liners destroyed those monuments and saved our
                sanity.
              </span>
              <span class="story">
                But our responsibility to catch errors turned heaven into the
                try-catch tower of terror.
              </span>
              <span class="story">
                Tryâ„¢ gives you a taste of heaven without compromising
                functionality. (typesafelly, of course.)
              </span>
            </p>
          </div>

          <div class="w-full overflow-x-visible">
            <div class="flex group pointer-events-none">
              <div
                tabindex="0"
                class="code-card transform group-hover:opacity-75 group-focus-within:opacity-75 group-focus-within:blur-sm group-hover:blur-sm focus:!blur-none hover:!blur-none filter focus:!opacity-100 hover:!opacity-100 pointer-events-auto h-fit min-w-96 [&:not(:first-child)]:-ml-32 transition-all"
              >
                <Pyramid />
              </div>

              <div
                tabindex="0"
                class="code-card transform group-hover:opacity-75 group-focus-within:opacity-75 group-focus-within:blur-sm group-hover:blur-sm focus:!blur-none hover:!blur-none filter focus:!opacity-100 hover:!opacity-100 pointer-events-auto h-fit min-w-96 [&:not(:first-child)]:-ml-32 transition-all"
              >
                <Heaven />
              </div>

              <div
                tabindex="0"
                class="code-card transform group-hover:opacity-75 group-focus-within:opacity-75 group-focus-within:blur-sm group-hover:blur-sm focus:!blur-none hover:!blur-none filter focus:!opacity-100 hover:!opacity-100 pointer-events-auto h-fit min-w-96 [&:not(:first-child)]:-ml-32 transition-all"
              >
                <Terror />
              </div>

              <div
                tabindex="0"
                class="code-card transform group-hover:opacity-75 group-focus-within:opacity-75 group-focus-within:blur-sm group-hover:blur-sm focus:!blur-none hover:!blur-none filter focus:!opacity-100 hover:!opacity-100 pointer-events-auto h-fit min-w-96 [&:not(:first-child)]:-ml-32 transition-all"
              >
                <Awesome />
              </div>
            </div>
          </div>
        </div>
      </main>
      <footer class="">
        Made by <a
          class={clsx(
            "hover:text-gray-12 focus:text-gray-12 transition-colors rounded",
            focusStyles
          )}
          href="https://twitter.com/bedesqui"
          ><img
            class="inline-block w-4 h-4 rounded-full"
            src="https://avatars.githubusercontent.com/u/37847523?v=4"
            alt=""
          /> Igor Bedesqui</a
        >, inspired by <a
          class={clsx(
            "hover:text-gray-12 focus:text-gray-12 transition-colors rounded",
            focusStyles
          )}
          href="https://www.youtube.com/watch?v=ITogH7lJTyE"
          ><FireshipLogo className="inline-block w-4 h-4 rounded-full" /> Fireship</a
        >
      </footer>
    </div>
  </body>
</html>
<script>
  const copy = document.querySelectorAll(".cursor-copy");
  copy.forEach((el) => {
    el.addEventListener("click", () => {
      navigator.clipboard.writeText("npm install @bdsqqq/try");
    });
  });

  const story = document.querySelectorAll(".story");
  const storyBits = Array.from(story);
  const codeSnippets = document.querySelectorAll(".code-card");
  const codeSnippetsArray = Array.from(codeSnippets);

  codeSnippetsArray.forEach((el, i) => {
    el.addEventListener("focus", () => {
      storyBits[i]?.classList.add("text-gray-12");
    });
    el.addEventListener("blur", () => {
      storyBits[i]?.classList.remove("text-gray-12");
    });
    el.addEventListener("mouseover", () => {
      storyBits[i]?.classList.add("text-gray-12");
    });
    el.addEventListener("mouseleave", () => {
      storyBits[i]?.classList.remove("text-gray-12");
    });
  });
</script>
<style is:global>
  :root {
    --astro-code-color-text: var(--color-gray-9);
    --astro-code-color-background: var(--color-gray-1);
    --astro-code-token-constant: var(--color-gray-12);
    --astro-code-token-string: var(--color-gray-11);
    --astro-code-token-comment: var(--color-gray-A7);
    --astro-code-token-keyword: var(--color-gray-12);
    --astro-code-token-parameter: var(--color-gray-11);
    --astro-code-token-function: var(--color-gray-12);
    --astro-code-token-string-expression: var(--color-gray-11);
    --astro-code-token-punctuation: var(--color-gray-11);
    --astro-code-token-link: var(--color-gray-11);
  }

  .astro-code {
    @apply p-4 rounded shadow-lg shadow-gray-A2 border border-gray-A5;
  }

  .code-card:hover ~ .code-card {
    @apply translate-x-36;
  }
  .code-card:focus-within ~ .code-card {
    @apply translate-x-36;
  }
</style>
